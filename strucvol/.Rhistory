simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, upper = 1.5, lower = 0.95, seed = 123){
set.seed(seed)
termEKs <- rep(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$EK[len])
set.seed(NULL)
print(head(termEKs))
prob <- sum(termEKs>=lower & termEKs <= upper) / N
return(prob)
}
test <- simintprob()
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, upper = 1.5, lower = 0.95, seed = 123){
set.seed(seed)
termEKs <- rep(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$EK[len-1])
set.seed(NULL)
print(head(termEKs))
prob <- sum(termEKs>=lower & termEKs <= upper) / N
return(prob)
}
test <- simintprob()
test <- rep(10,simstrucsystem()$EK[500])
test <- replicate(10,simstrucsystem()$EK[500])
test
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, upper = 1.5, lower = 0.95, seed = 123){
set.seed(seed)
termEKs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$EK[len])
set.seed(NULL)
print(head(termEKs))
prob <- sum(termEKs>=lower & termEKs <= upper) / N
return(prob)
}
test <- simintprob()
simstrucsystem <- function(len = 30, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.6, 1),
Ain = 100, Ein = 80, K = 20, r = 0.001, uv = 0.0005, ttv = 5,
crisis_sim = F, crisisret = -0.1)
{
mu1 <- pars[1]
beta1 <- pars[2]
sigma1 <- pars[3]
mu2 <- pars[4]
beta2 <- pars[5]
sigma2 <- pars[6]
rho <- pars[7]
phi <- pars[8]
len <- as.integer(len)
h_1 <- rep_len(0, length.out = len)
h_2 <- rep_len(0, length.out = len)
h0_1 <- rnorm(1, mean = mu1, sd = sigma1 / sqrt(1 - beta1^2))
h0_2 <- rnorm(1, mean = mu2, sd = sigma2 / sqrt(1 - beta2^2))
eta1 <- rnorm(len)
eta2 <- rnorm(len)
sigmaeps <- matrix(c(1, rho, rho, 1), byrow = T, ncol = 2, nrow = 2)
eps <- mvrnorm(n = len, mu = c(0,0), Sigma = sigmaeps)
eps1 <- eps[,1]
eps2 <- eps[,2]
h_1[1] <- mu1 + beta1 * (h0_1 - mu1) + sigma1 * eta1[1]  # Initialize
h_2[1] <- mu2 + beta2 * (h0_2 - mu2) + sigma2 * eta2[1]  # Initialize
for (i in 2:length(h_1)){
h_1[i] <- mu1 + beta1 * (h_1[i-1] - mu1) + sigma1 * eta1[i]
h_2[i] <- mu2 + beta2 * (h_2[i-1] - mu2) + sigma2 * eta2[i]
}
ra <- exp(h_1 / 2) * eps1
rm <- exp(h_2 / 2) * eps2
A <- cumprod(c(Ain, exp(ra)))
AK <- A / K
d1 <- (log(AK) + (r + 0.5 * sqrt(uv * 252)^2 ) * ttv) / (sqrt(uv * 252 * ttv))
E <- rep(0,len)
E[1] <- Ein
lm <- rep(0, len-1)
re <- rep(0, len)
re[1] <- ra[1] * pnorm(d1[1]) * A[1] / E[1]
for (j in 2:len){
lm[j -1] <- pnorm(d1[j - 1]) * A[j - 1] / E[j - 1]
re[j] <- (lm[j - 1]^phi) * ra[j]
E[j] <- E[j - 1] * exp(re[j])
}
EK = E / K
levrat <- E / (E + K)
cind <- ifelse(sum(rm) < crisisret, T, F)
if (crisis_sim == T){
return(ifelse(cind, EK[length(EK)], 999))
}
else{
return(list(retseries = cbind(ra, re, rm), h = cbind(h_1, h_2),
lm = lm, E = E, A = A, EK = EK, levrat = levrat, AK = AK, crisis = cind))
}
}
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, upper = 1.5, lower = 0.95, seed = 123){
set.seed(seed)
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(prob)
}
test <- simintprob()
60/(60 + 60)
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, upper = 0.5, lower = 0.7, seed = 123){
set.seed(seed)
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(prob)
}
test <- simintprob()
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.5, upper = 0.7, seed = 123){
set.seed(seed)
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(prob)
}
test <- simintprob()
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.4, upper = 0.6, seed = 123){
set.seed(seed)
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(prob)
}
test <- simintprob()
devtools::document()
devtools::document()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
detach("package:strucvol", unload = T)
library(strucvol)
simstrucsystem <- function(len = 30, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.6, 1),
Ain = 100, Ein = 80, K = 20, r = 0.001, uv = 0.0005, ttv = 5,
crisis_sim = F, crisisret = -0.1)
{
mu1 <- pars[1]
beta1 <- pars[2]
sigma1 <- pars[3]
mu2 <- pars[4]
beta2 <- pars[5]
sigma2 <- pars[6]
rho <- pars[7]
phi <- pars[8]
len <- as.integer(len)
h_1 <- rep_len(0, length.out = len)
h_2 <- rep_len(0, length.out = len)
h0_1 <- rnorm(1, mean = mu1, sd = sigma1 / sqrt(1 - beta1^2))
h0_2 <- rnorm(1, mean = mu2, sd = sigma2 / sqrt(1 - beta2^2))
eta1 <- rnorm(len)
eta2 <- rnorm(len)
sigmaeps <- matrix(c(1, rho, rho, 1), byrow = T, ncol = 2, nrow = 2)
eps <- mvrnorm(n = len, mu = c(0,0), Sigma = sigmaeps)
eps1 <- eps[,1]
eps2 <- eps[,2]
h_1[1] <- mu1 + beta1 * (h0_1 - mu1) + sigma1 * eta1[1]  # Initialize
h_2[1] <- mu2 + beta2 * (h0_2 - mu2) + sigma2 * eta2[1]  # Initialize
for (i in 2:length(h_1)){
h_1[i] <- mu1 + beta1 * (h_1[i-1] - mu1) + sigma1 * eta1[i]
h_2[i] <- mu2 + beta2 * (h_2[i-1] - mu2) + sigma2 * eta2[i]
}
ra <- exp(h_1 / 2) * eps1
rm <- exp(h_2 / 2) * eps2
A <- cumprod(c(Ain, exp(ra)))
AK <- A / K
d1 <- (log(AK) + (r + 0.5 * sqrt(uv * 252)^2 ) * ttv) / (sqrt(uv * 252 * ttv))
E <- rep(0, len)
E[1] <- Ein
lm <- rep(0, len-1)
re <- rep(0, len)
re[1] <- ra[1] * pnorm(d1[1]) * A[1] / E[1]
for (j in 2:len){
lm[j -1] <- pnorm(d1[j - 1]) * A[j - 1] / E[j - 1]
re[j] <- (lm[j - 1]^phi) * ra[j]
E[j] <- E[j - 1] * exp(re[j])
}
EK = E / K
levrat <- 1 - (E / (E + K))
cind <- ifelse(sum(rm) < crisisret, T, F)
if (crisis_sim == T){
return(ifelse(cind, levrat, 999))
}
else{
return(list(retseries = cbind(ra, re, rm), h = cbind(h_1, h_2),
lm = lm, E = E, A = A, EK = EK, levrat = levrat, AK = AK, crisis = cind))
}
}
simstrucsystem <- function(len = 30, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.6, 1),
Ain = 100, Ein = 80, K = 20, r = 0.001, uv = 0.0005, ttv = 5,
crisis_sim = F, crisisret = -0.1)
{
mu1 <- pars[1]
beta1 <- pars[2]
sigma1 <- pars[3]
mu2 <- pars[4]
beta2 <- pars[5]
sigma2 <- pars[6]
rho <- pars[7]
phi <- pars[8]
len <- as.integer(len)
h_1 <- rep_len(0, length.out = len)
h_2 <- rep_len(0, length.out = len)
h0_1 <- rnorm(1, mean = mu1, sd = sigma1 / sqrt(1 - beta1^2))
h0_2 <- rnorm(1, mean = mu2, sd = sigma2 / sqrt(1 - beta2^2))
eta1 <- rnorm(len)
eta2 <- rnorm(len)
sigmaeps <- matrix(c(1, rho, rho, 1), byrow = T, ncol = 2, nrow = 2)
eps <- mvrnorm(n = len, mu = c(0,0), Sigma = sigmaeps)
eps1 <- eps[,1]
eps2 <- eps[,2]
h_1[1] <- mu1 + beta1 * (h0_1 - mu1) + sigma1 * eta1[1]  # Initialize
h_2[1] <- mu2 + beta2 * (h0_2 - mu2) + sigma2 * eta2[1]  # Initialize
for (i in 2:length(h_1)){
h_1[i] <- mu1 + beta1 * (h_1[i-1] - mu1) + sigma1 * eta1[i]
h_2[i] <- mu2 + beta2 * (h_2[i-1] - mu2) + sigma2 * eta2[i]
}
ra <- exp(h_1 / 2) * eps1
rm <- exp(h_2 / 2) * eps2
A <- cumprod(c(Ain, exp(ra)))
AK <- A / K
d1 <- (log(AK) + (r + 0.5 * sqrt(uv * 252)^2 ) * ttv) / (sqrt(uv * 252 * ttv))
E <- rep(0, len)
E[1] <- Ein
lm <- rep(0, len-1)
re <- rep(0, len)
re[1] <- ra[1] * pnorm(d1[1]) * A[1] / E[1]
for (j in 2:len){
lm[j -1] <- pnorm(d1[j - 1]) * A[j - 1] / E[j - 1]
re[j] <- (lm[j - 1]^phi) * ra[j]
E[j] <- E[j - 1] * exp(re[j])
}
EK = E / K
levrat <- 1 - (E / (E + K))
cind <- ifelse(sum(rm) < crisisret, T, F)
if (crisis_sim == T){
return(ifelse(cind, levrat[len], 999))
}
else{
return(list(retseries = cbind(ra, re, rm), h = cbind(h_1, h_2),
lm = lm, E = E, A = A, EK = EK, levrat = levrat, AK = AK, crisis = cind))
}
}
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.4, upper = 0.6, seed = 123, crisis = F){
set.seed(seed)
if(crisis == F){
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
}
else{
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = T))
termlrs <- termlrs[termlrs!=999]
}
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(prob)
}
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.4, upper = 0.6, seed = 123,
crisis = F, crisisret = -0.1){
set.seed(seed)
if(crisis == F){
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
}
else{
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = T, crisisret = crisisret))
termlrs <- termlrs[termlrs!=999]
}
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(prob)
}
test <- simintprob(crisis = T)
library("strucvol")
test <- simintprob(crisis = T)
library("MASS")
test <- simintprob(crisis = T)
test <- simintprob(crisis = F)
test
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.4, upper = 0.6, seed = 123,
crisis = F, crisisret = -0.1){
set.seed(seed)
if(crisis == F){
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
}
else{
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = T, crisisret = crisisret))
termlrs <- termlrs[termlrs!=999]
N <- length(termlrs)
}
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(list(prob = prob, termlrs = termlrs))
}
test <- simintprob(crisis = T)
test$prob
length(test$termlrs)
detach("package:strucvol", unload = T)
devtools::document()
library(strucvol)
devtools::document()
rm(list = c("simstrucsystem"))
devtools::document()
rm(list = c("simintprob"))
devtools::document()
devtools::document()
library(strucvol)
devtools::build_manual()
library(strucvol)
test <- simintprob(N = 1000, len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346,
lower = 0.05, upper = 0.9, crisis = F)
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.4, upper = 0.6, seed = 123,
crisis = F, crisisret = -0.1){
set.seed(seed)
if(crisis == F){
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
}
else{
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = T, crisisret = crisisret))
print(head(termlrs))
termlrs <- termlrs[termlrs!=999]
N <- length(termlrs)
}
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(list(prob = prob, termlrs = termlrs))
}
test <- simintprob(N = 1000, len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346,
lower = 0.05, upper = 0.9, crisis = F)
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.4, upper = 0.6, seed = 123,
crisis = F, crisisret = -0.1){
set.seed(seed)
if(crisis == F){
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
}
else{
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = T, crisisret = crisisret))
print(head(termlrs))
termlrs <- termlrs[termlrs!=999]
N <- length(termlrs)
}
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(list(prob = prob, termlrs = termlrs))
}
test <- simintprob(N = 1000, len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346,
lower = 0.05, upper = 0.9, crisis = F)
simintprob <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, lower = 0.4, upper = 0.6, seed = 123,
crisis = F, crisisret = -0.1){
set.seed(seed)
if(crisis == F){
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = F)$levrat[len])
print(head(termlrs))
}
else{
termlrs <- replicate(N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = T, crisisret = crisisret))
print(head(termlrs))
termlrs <- termlrs[termlrs!=999]
N <- length(termlrs)
}
set.seed(NULL)
prob <- sum(termlrs >= lower & termlrs <= upper) / N
return(list(prob = prob, termlrs = termlrs))
}
test <- simintprob(N = 1000, len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346,
lower = 0.05, upper = 0.9, crisis = F)
test <- simstrucsystem(len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346,
lower = 0.05, upper = 0.9, crisis = F)
test <- simstrucsystem(len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346,
lower = 0.05, upper = 0.9, crisis_sim =  F)
test <- simstrucsystem(len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346, crisis_sim = F)
test <- simstrucsystem(len = 1000, pars = c(-12.51265, 0.99412, 0.08549,-9.73112, 0.97662, 0.22827, 0.65385, 1),
uv = 4.01e-05, r = 0.016, K = 131.6531, Ein = 33.64, Ain = 155, ttv = 4.208346, crisis_sim = F)
hist(test, probability = T)
test$levrat
plot(test$levrat, type = "l")
plot(test$EK, type = "l")
plot(test$lm, type = "l")
?hist
simstrucsystem <- function(len = 30, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.6, 1),
Ain = 100, Ein = 80, K = 20, r = 0.001, uv = 0.0005, ttv = 5,
crisis_sim = F, crisisret = -0.1)
{
mu1 <- pars[1]
beta1 <- pars[2]
sigma1 <- pars[3]
mu2 <- pars[4]
beta2 <- pars[5]
sigma2 <- pars[6]
rho <- pars[7]
phi <- pars[8]
len <- as.integer(len)
h_1 <- rep_len(0, length.out = len)
h_2 <- rep_len(0, length.out = len)
h0_1 <- rnorm(1, mean = mu1, sd = sigma1 / sqrt(1 - beta1^2))
h0_2 <- rnorm(1, mean = mu2, sd = sigma2 / sqrt(1 - beta2^2))
eta1 <- rnorm(len)
eta2 <- rnorm(len)
sigmaeps <- matrix(c(1, rho, rho, 1), byrow = T, ncol = 2, nrow = 2)
eps <- mvrnorm(n = len, mu = c(0,0), Sigma = sigmaeps)
eps1 <- eps[,1]
eps2 <- eps[,2]
h_1[1] <- mu1 + beta1 * (h0_1 - mu1) + sigma1 * eta1[1]  # Initialize
h_2[1] <- mu2 + beta2 * (h0_2 - mu2) + sigma2 * eta2[1]  # Initialize
for (i in 2:length(h_1)){
h_1[i] <- mu1 + beta1 * (h_1[i-1] - mu1) + sigma1 * eta1[i]
h_2[i] <- mu2 + beta2 * (h_2[i-1] - mu2) + sigma2 * eta2[i]
}
ra <- exp(h_1 / 2) * eps1
rm <- exp(h_2 / 2) * eps2
A <- cumprod(c(Ain, exp(ra)))
AK <- A / K
d1 <- (log(AK) + (r + 0.5 * sqrt(uv * 252)^2 ) * ttv) / (sqrt(uv * 252 * ttv))
E <- rep(0, len)
E[1] <- Ein
lm <- rep(0, len-1)
re <- rep(0, len)
re[1] <- ra[1] * pnorm(d1[1]) * A[1] / E[1]
for (j in 2:len){
lm[j -1] <- pnorm(d1[j - 1]) * A[j - 1] / E[j - 1]
re[j] <- (lm[j - 1]^phi) * ra[j]
E[j] <- E[j - 1] * exp(re[j])
}
EK = E / K
levrat <- 1 - (E / (E + K))
cind <- ifelse(sum(rm) < crisisret, T, F)
if (crisis_sim == T){
return(ifelse(cind, levrat[len], 999))
}
else{
return(list(retseries = cbind(ra, re, rm), h = cbind(h_1, h_2),
lm = lm, E = E, A = A, EK = EK, levrat = levrat, AK = AK, crisis = cind))
}
}
simdevent <- function(N = 1000, len = 500, pars = c(-10, 0.95, 0.3, -12, 0.9, 0.2, 0.9, 1),
Ain = 80, Ein = 60, K = 60, r = 0.001, uv = 0.0005, ttv = 5, thd = 0.8, plot = T, trim = T,
trimquants = c(0.01, 0.99)){
sims <- replicate(n = N, simstrucsystem(len = len, pars = pars,
Ain = Ain, Ein = Ein, K = K, r = r, uv = uv, ttv = ttv,
crisis_sim = T))
sims <- sims[sims!=999]
if (trim == T) {
sims <-  sims[(sims > quantile(sims, trimquants[1])) & (sims < quantile(sims, trimquants[2]))]
}
if (plot == T){
hist(sims, main = "Distribution of the terminal crisis leverage ratio.", xlab = "Leverage ratio", col = 5,
density = 20,
angle = 20)
abline(v = thd, col ="red")
legend("topleft", legend = "Threshold", pch = "|", col = "red")
}
return(sims)
}
test <- simdevent(N = 20000, trim = T)
library("MASS")
test <- simdevent(N = 20000, trim = T)
library(strucvol)
test <.
test <- simdevent(len = 90)
library("MASS")
test <- simdevent(len = 90)
test <- simdevent(len = 252)
test <- simdevent(len = 500)
