// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// lcrec
NumericVector lcrec(NumericVector y, NumericVector logsigma2, double alpha0, double alpha1, double beta1);
RcppExport SEXP _strucvol_lcrec(SEXP ySEXP, SEXP logsigma2SEXP, SEXP alpha0SEXP, SEXP alpha1SEXP, SEXP beta1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type logsigma2(logsigma2SEXP);
    Rcpp::traits::input_parameter< double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< double >::type beta1(beta1SEXP);
    rcpp_result_gen = Rcpp::wrap(lcrec(y, logsigma2, alpha0, alpha1, beta1));
    return rcpp_result_gen;
END_RCPP
}
// asylcrec
NumericVector asylcrec(NumericVector y, NumericVector logsigma2, NumericVector ind, double alpha0, double alpha1, double alpha2, double beta1);
RcppExport SEXP _strucvol_asylcrec(SEXP ySEXP, SEXP logsigma2SEXP, SEXP indSEXP, SEXP alpha0SEXP, SEXP alpha1SEXP, SEXP alpha2SEXP, SEXP beta1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type logsigma2(logsigma2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ind(indSEXP);
    Rcpp::traits::input_parameter< double >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< double >::type alpha2(alpha2SEXP);
    Rcpp::traits::input_parameter< double >::type beta1(beta1SEXP);
    rcpp_result_gen = Rcpp::wrap(asylcrec(y, logsigma2, ind, alpha0, alpha1, alpha2, beta1));
    return rcpp_result_gen;
END_RCPP
}
// derivreclm
DataFrame derivreclm(NumericVector leta2, NumericVector logsigma2, NumericVector beta1, NumericVector lm2);
RcppExport SEXP _strucvol_derivreclm(SEXP leta2SEXP, SEXP logsigma2SEXP, SEXP beta1SEXP, SEXP lm2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type leta2(leta2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type logsigma2(logsigma2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lm2(lm2SEXP);
    rcpp_result_gen = Rcpp::wrap(derivreclm(leta2, logsigma2, beta1, lm2));
    return rcpp_result_gen;
END_RCPP
}
// derivreclev
DataFrame derivreclev(NumericVector leta2, NumericVector logsigma2, NumericVector beta1);
RcppExport SEXP _strucvol_derivreclev(SEXP leta2SEXP, SEXP logsigma2SEXP, SEXP beta1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type leta2(leta2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type logsigma2(logsigma2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta1(beta1SEXP);
    rcpp_result_gen = Rcpp::wrap(derivreclev(leta2, logsigma2, beta1));
    return rcpp_result_gen;
END_RCPP
}
// cstoch
NumericVector cstoch(NumericVector h, NumericVector eta, double sbeta, double sigma, double mu, double l);
RcppExport SEXP _strucvol_cstoch(SEXP hSEXP, SEXP etaSEXP, SEXP sbetaSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type sbeta(sbetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(cstoch(h, eta, sbeta, sigma, mu, l));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_strucvol_lcrec", (DL_FUNC) &_strucvol_lcrec, 5},
    {"_strucvol_asylcrec", (DL_FUNC) &_strucvol_asylcrec, 7},
    {"_strucvol_derivreclm", (DL_FUNC) &_strucvol_derivreclm, 4},
    {"_strucvol_derivreclev", (DL_FUNC) &_strucvol_derivreclev, 3},
    {"_strucvol_cstoch", (DL_FUNC) &_strucvol_cstoch, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_strucvol(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
